head	1.9;
access;
symbols;
locks; strict;
comment	@# @;


1.9
date	2012.10.04.19.13.36;	author root;	state Exp;
branches;
next	1.8;

1.8
date	2010.08.03.19.22.27;	author root;	state Exp;
branches;
next	1.7;

1.7
date	2010.07.22.22.35.33;	author james;	state Exp;
branches;
next	1.6;

1.6
date	2010.07.22.17.33.29;	author james;	state Exp;
branches;
next	1.5;

1.5
date	2010.06.25.08.37.16;	author james;	state Exp;
branches;
next	1.4;

1.4
date	2010.06.25.01.50.01;	author james;	state Exp;
branches;
next	1.3;

1.3
date	2010.06.24.22.11.35;	author james;	state Exp;
branches;
next	1.2;

1.2
date	2010.06.24.01.02.14;	author james;	state Exp;
branches;
next	1.1;

1.1
date	2010.06.23.21.10.05;	author james;	state Exp;
branches;
next	;


desc
@@


1.9
log
@modify while loop inside function insert_sql_data to skip
contract keys where the detail for that key has zero lines.
@
text
@<?

define( 'I_DEBUG', FALSE );


function pre_echo( $s )
{
//	echo "<pre>$s</pre>";
}


function string_field( $s )
// return $s with a quote mark at both ends.  Eventually this
// should have smarts to do all necessary escaping of special
// characters in string $s

{
	$result = '"' . $s . '"';
	return( $result );
}


function build_header_field_array()
// Return an array of rows where [n][0] is a field name,
// and [n][1] is a boolean indicating when TRUE that the
// field needs to be enclosed in quotes.
{

// what is the sequence of field names?

	$p_fld_array = array();

	$p_fld_array[] = array( 'CIndex',        FALSE );
	$p_fld_array[] = array( 'ContractName',  TRUE  );
	$p_fld_array[] = array( 'SiteName',      TRUE  );
	$p_fld_array[] = array( 'StartDate',     TRUE  );
	$p_fld_array[] = array( 'EndDate',       TRUE  );
	$p_fld_array[] = array( 'AgencyComm',    FALSE );
	$p_fld_array[] = array( 'Discount',      FALSE );
	$p_fld_array[] = array( 'AIndex',        FALSE );
	$p_fld_array[] = array( 'TotalValue',    FALSE );
	$p_fld_array[] = array( 'Attributes',    FALSE );
	$p_fld_array[] = array( 'CustOrder',     TRUE  );
	$p_fld_array[] = array( 'SIndex',        FALSE );
	$p_fld_array[] = array( 'SalesComm',     FALSE );
        $p_fld_array[] = array( 'MinSeparation', FALSE );

	return( $p_fld_array );

} // build_header_field_array


function build_detail_field_array()
// Return an array of rows where [n][0] is a field name,
// and [n][1] is a boolean indicating when TRUE that the
// field needs to be enclosed in quotes.
{

// what is the sequence of field names?

	$p_fld_array = array();

//	$p_fld_array[] = array( 'Line',         FALSE );
	$p_fld_array[] = array( 'Contract',     FALSE );
	$p_fld_array[] = array( 'Network',      TRUE  );
	$p_fld_array[] = array( 'StartDate',    TRUE  );
	$p_fld_array[] = array( 'EndDate',      TRUE  );
	$p_fld_array[] = array( 'TimeOn',       TRUE  );
	$p_fld_array[] = array( 'TimeOff',      TRUE  );
	$p_fld_array[] = array( 'Distribution', TRUE  );
	$p_fld_array[] = array( 'Bonus',        FALSE );
	$p_fld_array[] = array( 'Priority',     FALSE );
	$p_fld_array[] = array( 'UnitPrice',    FALSE );
	$p_fld_array[] = array( 'nWeeks',       FALSE );
	$p_fld_array[] = array( 'Value',        TRUE  );
	$p_fld_array[] = array( 'nSched',       FALSE );
	$p_fld_array[] = array( 'nPlaced',      FALSE );
	$p_fld_array[] = array( 'nPlayed',      FALSE );
	$p_fld_array[] = array( 'ActualValue',  FALSE );
	$p_fld_array[] = array( 'ProgramName',  TRUE  );
	$p_fld_array[] = array( 'StartDay',     FALSE );
	$p_fld_array[] = array( 'EndDay',       FALSE );
	$p_fld_array[] = array( 'MakeGoods',    FALSE );
	$p_fld_array[] = array( 'MakeGoodDays', FALSE );
	$p_fld_array[] = array( 'nOrdered',     FALSE );
	$p_fld_array[] = array( 'LineID',       TRUE  );

	return( $p_fld_array );

} // build_detail_field_array


function data_values( $p_fld_array, $p_array )
// return the data row values in the sequence
// given by p_fld_array, in the format an INSERT statement
// requires.
{

	$s = '';
	foreach ($p_fld_array as $fld) {
		switch (TRUE) {
		case ($fld[ 1 ]):
			$val = string_field( $p_array[ $fld[0] ] );
			break;
		default:
			$val = $p_array[ $fld[0] ];
		} // switch
		$s .= ', ' . $val;
	} // foreach fld
	$s = substr( $s, 2 );	// remove leading comma-space
	return( $s );

} // data_values


function fld_list( $p_fld_array )
// take the field array and return a comma-separated
// list of field names.
{
	$s = '';
	foreach ($p_fld_array as $fld)
		$s .= ', ' . $fld[0];
	$s = substr( $s, 2 );	// remove leading comma-space
	return( $s );
}


function agency_insert( $db_conn, $p_name, $p_rate, &$p_aindex )
{
GLOBAL $msg_log;

// create a new, minimal agency record with a name and a rate.
// if successful return TRUE and update $p_aindex, else FALSE.

	$old_seq = last_insert_id( $db_conn ); // note this value
	$success = !is_null( $old_seq );
	$qry = "INSERT INTO agencies (Name,Rate) VALUES ('$p_name',$p_rate)";
//if ($success) pre_echo( $qry );
	$success = ($success && mysql_query( $qry, $db_conn ));
	if ($success) {
		$agent_seq = last_insert_id( $db_conn );
		if ($success = (($agent_seq <> $old_seq) && !is_null( $agent_seq )))
			$p_aindex = $agent_seq;
	}
	return( $success );

} // agency_insert


function customer_insert( $db_conn, $p_name, $p_discount, &$p_cindex )
{
GLOBAL $msg_log;

// create a new, minimal customer record with a name and a discount rate.
// if successful return TRUE and update $p_cindex, else FALSE.

	$old_seq = last_insert_id( $db_conn ); // note this value
	$success = !is_null( $old_seq );
	$qry = "INSERT INTO customers (Name,Discount) VALUES ('$p_name',$p_discount)";
//if ($success) pre_echo( $qry );
	$success = ($success && mysql_query( $qry, $db_conn ));
	if ($success) {
		$cust_seq = last_insert_id( $db_conn );
		if ($success = (($cust_seq <> $old_seq) && !is_null( $cust_seq )))
			$p_cindex = $cust_seq;
	}
	return( $success );

} // customer_insert


function do_insert( $db_conn, $header_insert_stmt, $detail_insert_stmt )

// Perform the inserts contained in $header_insert_stmt and
// $detail_insert_stmt.  That will move data into temporary
// tables (because the INSERTs are formatted that way by
// the caller).

// After the data is in the temp tables, try to insert the temp_header
// table into the production header table.  If successful, not the
// new Seq assigned, and update the temp_detail table to reference
// that value in each record's Contract field.

// Then, attempt to insert the temp_detail records into the
// production detail table.

{
GLOBAL $msg_log;

if (I_DEBUG) message_log_append( $msg_log, " begin do_insert" );

	$success = TRUE;

// Delete all temp_header and temp_detail records
	if ($success) {
		$qry = "DELETE FROM temp_header";
//pre_echo( $qry );
		$success = mysql_query( $qry, $db_conn );	// true if success
		if (!$success)
			message_log_append( $msg_log, "do_insert: delete from temp_header failed: " . 
				mysql_error( $db_conn ), MSG_LOG_ERROR );
	} // if success

	if ($success) {
		$qry = "DELETE FROM temp_detail";
//pre_echo( $qry );
		$success = mysql_query( $qry, $db_conn );	// true if success
		if (!$success)
			message_log_append( $msg_log, "do_insert: delete from temp_detail failed: " . 
				mysql_error( $db_conn ), MSG_LOG_ERROR );
	} // if success

// Attempt the temp header insert
	if ($success) {
		$qry = $header_insert_stmt;
//pre_echo( $qry );
		$success = mysql_query( $qry, $db_conn );	// true if success
		if (!$success)
			message_log_append( $msg_log, "do_insert: temp header insert failed: " . 
				mysql_error( $db_conn ), MSG_LOG_ERROR );
	} // if success

// Attempt the temp detail insert
	if ($success) {
		$qry = $detail_insert_stmt;
//pre_echo( $qry );
		$success = mysql_query( $qry, $db_conn );	// true if success
		if (!$success)
			message_log_append( $msg_log, "temp detail insert failed: " . 
				mysql_error( $db_conn ), MSG_LOG_ERROR );
	} // if success

// Attempt to insert temp_header into contract_header
	if ($success) { // Set $fld_list to the list of fields in table temp_header
		$fld_list = field_list( "temp_header", $db_conn );
		$success = (!is_null( $fld_list ));
		if (!$success)
			message_log_append( $msg_log, "field_list of temp_header failed", 
						MSG_LOG_ERROR );
	} // if success

	if ($success) {
		$success = !is_null( $old_seq = last_insert_id( $db_conn ) );
		if (!$success)
			message_log_append( $msg_log, "do_insert: last_insert_id failed(1)",
				MSG_LOG_ERROR );
	} // if success

	if ($success) {
//if (I_DEBUG) message_log_append( $msg_log, "do_insert: old_seq = $old_seq" );
		$qry = "INSERT INTO contract_header ( $fld_list ) " .
				"SELECT * FROM temp_header";
//pre_echo( $qry );
		$success = mysql_query( $qry, $db_conn );	// true if success
		if (!$success)
			message_log_append( $msg_log, "contract header insert failed: " . 
				mysql_error( $db_conn ), MSG_LOG_ERROR );
	} // if success

	if ($success) {
		$new_seq = last_insert_id( $db_conn );
		$success = (!is_null( $new_seq ) && ($new_seq <> $old_seq));
		if ($success) $seq = $new_seq;
		else message_log_append( $msg_log, "temp detail insert failed: " . 
				mysql_error( $db_conn ), MSG_LOG_ERROR );
	} // if success

// Attempt to update the temp_detail records with the new $seq number
	if ($success) {
if (I_DEBUG) message_log_append( $msg_log, "do_insert: new contract_header seq = $seq" );
		$qry = "UPDATE temp_detail SET Contract = $seq";
//pre_echo( $qry );
		$success = mysql_query( $qry, $db_conn );
		if (!$success) 
			message_log_append( $msg_log, mysql_error( $db_conn ), MSG_LOG_ERROR );
	} // if success

	if ($success) { // Set $fld_list to the list of fields in table temp_detail
		$fld_list = field_list( "temp_detail", $db_conn );
		$success = ($fld_list != NULL);
		if (!$success)
			message_log_append( $msg_log, "field_list of temp_detail failed", MSG_LOG_ERROR );
	} // if success

	if ($success) { // Set $seqn to the value of LAST_INSERT_ID()
		$old_seq = last_insert_id( $db_conn );
//if (I_DEBUG) message_log_append( $msg_log, "detail: old_seq = $old_seq" );
		$success = (!is_null( $old_seq ));
		if (!$success)
			message_log_append( $msg_log, "do_insert: last_insert_id failed(2)",
				MSG_LOG_ERROR );
	} // if success

	if ($success) { // insert into contract_detail from temp_detail
		$qry = "INSERT INTO contract_detail ( $fld_list ) " .
				"SELECT * FROM temp_detail";
if (I_DEBUG) message_log_append( $msg_log, "detail: $qry" );
//pre_echo( $qry );
		$success = mysql_query( $qry, $db_conn );
		if (!$success)
			message_log_append( $msg_log, mysql_error( $db_conn ), MSG_LOG_ERROR );
	} // if success

	if ($success) { // check to see if LAST_INSERT_ID() changed
		$new_seq = last_insert_id( $db_conn );
		$success = (($new_seq <> $old_seq) && !is_null( $new_seq ));
		if ($success) {
if (I_DEBUG) message_log_append( $msg_log, "do_insert: success" );
		} else message_log_append( $msg_log, 
				"contract_detail insert failed", MSG_LOG_ERROR );
	} // if success

	return( $success );

} // do_insert


function insert_sql_data( $db_conn, 
			  $p_campaigns,
			  $p_headers,
			  $p_details )

// insert the header and detail data into the file
// with appropriate safeguards to ensure full 
// completion or rollback of the transaction.

{
GLOBAL $msg_log;

	$success = TRUE;

// Wrap all this in a transaction

// First, turn off autocommit
	$qry = "set autocommit=0";
//pre_echo( $qry );
	$success = mysql_query( $qry, $db_conn );

// Second, take care of all ALTER TABLE queries.  Due to a (documented)
// glitch in MySQL, these commands force a transaction to commit, 
// which sucks.

	if ($success) { // Create the temp_header table
		$qry = "CREATE TEMPORARY TABLE temp_header LIKE contract_header";
//pre_echo( $qry );
		$success = mysql_query( $qry, $db_conn );
		if (!$success) 
			message_log_append( $msg_log, mysql_error( $db_conn ), MSG_LOG_ERROR );
	}

	if ($success) { // Create the temp_detail table
		$qry = "CREATE TEMPORARY TABLE temp_detail LIKE contract_detail";
//pre_echo( $qry );
		$success = mysql_query( $qry, $db_conn );
		if (!$success)
			message_log_append( $msg_log, mysql_error( $db_conn ), MSG_LOG_ERROR );
	}

	if ($success) { // Delete the Seq field from table temp_header
		$qry = "ALTER TABLE temp_header DROP COLUMN Seq";
//pre_echo( $qry );
		$success = mysql_query( $qry, $db_conn );
		if (!$success)
			message_log_append( $msg_log, mysql_error( $db_conn ), MSG_LOG_ERROR );
	}

        if ($success) { // Delete the Line column from table temp_detail
		$qry = "ALTER TABLE temp_detail DROP COLUMN Line";
//pre_echo( $qry );
		$success = mysql_query( $qry, $db_conn );
		if (!$success)
			message_log_append( $msg_log, mysql_error( $db_conn ), MSG_LOG_ERROR );
	}

// loop through the campaigns, headers, and details to insert the
// data into the SQL database.  Keep solid track of all error
// results so that we can ROLLBACK on any error.

	if ($success) {
//echo "<pre>";
//var_dump( $p_campaigns );  echo "</pre><br>";
		$success = begin( $db_conn );
		if (!$success)
			message_log_append( $msg_log, "Error in START TRANSACTION: " .
				mysql_error( $db_conn ), MSG_LOG_ERROR );
	}

// do the work here, and keep track of $success

// If we need to create a new agency record, do that here.

	$new_agency = FALSE;
	if ($success && is_null( $p_campaigns[0][ 'Agency Record' ])) {
		$agent_name = $p_campaigns[0][ 'Agency Name' ];
		$rate = DEFAULT_AGENCY_RATE / 10;
		if ($success = agency_insert( $db_conn, $agent_name, $rate, $aindex )) {
			$p_campaigns[0][ 'Agency Record' ] = 
				agency_record( $agent_name, OPERATOR_NAME );
			$success = !is_null( $p_campaigns[0][ 'Agency Record' ]);
		} // if agency_insert
		if ($success) {
			$new_agency = TRUE;
			message_log_append( $msg_log, "Agency created: " .
			"Seq = $aindex, Name = '$agent_name'", MSG_LOG_WARNING );
		} else message_log_append( $msg_log, "Error while creating " . 
			"Agency '$agent_name': " . mysql_error( $db_conn ), MSG_LOG_ERROR );
	} // if null agency record

// If we need to create a new customer record, do that here.

	$new_customer = FALSE;
	if ($success && is_null( $p_campaigns[0][ 'Customer Record' ])) {
		$cust_name = $p_campaigns[0][ 'Customer Name' ];
		$rate = DEFAULT_CUST_DISCOUNT;
		if ($success = customer_insert( $db_conn, $cust_name, $rate, $cindex )) {
			$p_campaigns[0][ 'Customer Record' ] = 
				cust_record( $cust_name, OPERATOR_NAME );
			$success = !is_null( $p_campaigns[0][ 'Customer Record' ]);
		} // if customer_insert
		if ($success) {
			$new_customer = TRUE;
			message_log_append( $msg_log, "Customer created: " .
			"Seq = $cindex, Name = '$cust_name'", MSG_LOG_WARNING );
		} else message_log_append( $msg_log, "Error while creating " . 
			"Customer '$cust_name' " . mysql_error( $db_conn ), MSG_LOG_ERROR );
	} // if null customer record

	if ($success) {

// build the list of header fields, in order with 'quote required' flag
//  [n][0] is field name, [n][1] is boolean T=quote required, F=not

		$hdr_flds = build_header_field_array();

// A SQL INSERT statement lead-in
		$hdr_sql  = "INSERT INTO temp_header ( ";
		$hdr_sql .= fld_list( $hdr_flds ) . ") VALUES\n";

// build the list of detail fields, in order with 'quote required' flag
//  [n][0] is field name, [n][1] is boolean T=quote required, F=not

		$det_flds = build_detail_field_array();

// A SQL INSERT statement lead-in
		$det_sql  = "INSERT INTO temp_detail ( ";
		$det_sql .= fld_list( $det_flds ) . ") VALUES ";

// Here we go.  We'll loop through each contract header record,
// and its accompanying detail records.

		$n_inserted = 0;

		while ($success && (list( $key ) = each( $p_headers ))) {

		    if (count( $p_details[ $key ] ) > 0) {

//	If we created a new agency or customer above, update 
//	the respective header fields.
			if ($new_customer) {
				$p_headers[ $key ][ 'CIndex' ] = $cindex;
				$p_headers[ $key ][ 'Discount' ] = 
					$p_campaigns[0][ 'Customer Record' ][ 'Discount' ];
			}
			if ($new_agency) {
				$p_headers[ $key ][ 'AIndex' ] = $aindex;
				$p_headers[ $key ][ 'AgencyComm' ] = 
					$p_campaigns[0][ 'Agency Record' ][ 'Rate' ];
			}

			$row = data_values( $hdr_flds, $p_headers[ $key ] );

			$sql_header  = $hdr_sql;	// INSERT INTO ... VALUES
			$sql_header .= "(" . $row . ");";

			$rows = "";
			foreach ($p_details[ $key ] as $line)
				$rows .= ",\n( " . data_values( $det_flds, $line ) . " )";
			$rows = substr( $rows, 1 );	// remove comma-newline
			$sql_detail  = $det_sql;	// INSERT INTO ... VALUES
			$sql_detail .= $rows;

			if ($success = do_insert( $db_conn, $sql_header, $sql_detail ))
				$n_inserted++;

		    } // if detail count > 0

		} // while success and each key

	} // if success

	if ($success) {
		$success = commit( $db_conn );
		if ($success)
			message_log_append( $msg_log, "$n_inserted contract" .
				($n_inserted == 1 ? '' : 's') . " imported" );
		else {
			message_log_append( $msg_log, "Error in COMMIT TRANSACTION: " .
				mysql_error( $db_conn ), MSG_LOG_ERROR );
			if (!rollback( $db_conn ))
				message_log_append( $msg_log, "Error in ROLLBACK TRANSACTION: " .
					mysql_error( $db_conn ), MSG_LOG_ERROR );
		}
	} else {
		if (!rollback( $db_conn ))
			message_log_append( $msg_log, "Error in ROLLBACK TRANSACTION: " .
				mysql_error( $db_conn ), MSG_LOG_ERROR );
	} // if success

	return( $success );

} // insert_sql_data


function insert_sql( $p_campaigns,
		     $p_headers,
		     $p_details )

// take the arrays and organize a structured INSERT process
// with the necessary steps to ensure referential integrity
// of the various indices.  protect against errors with
// transaction commit/rollback.

{
GLOBAL $db_conn;

	insert_sql_data( $db_conn, $p_campaigns, $p_headers, $p_details );

} // insert_sql

?>
@


1.8
log
@divide DEFAULT_AGENCY_RATE by ten when creating a new agencies record.
@
text
@d455 2
d485 2
@


1.7
log
@add nOrdered, LineID
@
text
@d395 1
a395 1
		$rate = DEFAULT_AGENCY_RATE;
@


1.6
log
@add MinSeparation field; add code to attempt ROLLBACK if COMMIT
encounters an error.
@
text
@d85 2
@


1.5
log
@Lots of work to make the transaction-protected insertion
happen, and keep referential integrity between affected
tables.
@
text
@d33 14
a46 13
	$p_fld_array[] = array( 'CIndex',       FALSE );
	$p_fld_array[] = array( 'ContractName', TRUE  );
	$p_fld_array[] = array( 'SiteName',     TRUE  );
	$p_fld_array[] = array( 'StartDate',    TRUE  );
	$p_fld_array[] = array( 'EndDate',      TRUE  );
	$p_fld_array[] = array( 'AgencyComm',   FALSE );
	$p_fld_array[] = array( 'Discount',     FALSE );
	$p_fld_array[] = array( 'AIndex',       FALSE );
	$p_fld_array[] = array( 'TotalValue',   FALSE );
	$p_fld_array[] = array( 'Attributes',   FALSE );
	$p_fld_array[] = array( 'CustOrder',    TRUE  );
	$p_fld_array[] = array( 'SIndex',       FALSE );
	$p_fld_array[] = array( 'SalesComm',    FALSE );
d490 1
a490 1
		else
d493 4
@


1.4
log
@lots of work on the iterative framework to accomplish the database
update.  currently believed to have functional customer/agency creation
on demand.  Customers and Agencies are created from the campaign array,
so that multiple contracts for a non-existent customer don't create
multiple creations of the customer record.  Once the customer/agency
record is created, it is stored back into the campaign array for
later reference (aindex/cindex) by the header array handling routine.
@
text
@d3 121
d133 1
d135 2
a136 2
echo "$qry<br>";
	$success = mysql_query( $qry, $db_conn );
d139 1
a139 1
		if ($success = ($agent_seq <> $old_seq))
d155 1
d157 2
a158 2
echo "$qry<br>";
	$success = mysql_query( $qry, $db_conn );
d161 1
a161 1
		if ($success = ($cust_seq <> $old_seq))
d169 15
a183 5
function header_insert( $db_conn, $p_header_array )
// insert the record in the temp_header table into production table
// contract_header.
// return the new sequence number if no errors, else NULL
// $p_header_array is one single contract array.
d187 1
a187 1
if (DEBUG) message_log_append( $msg_log, "header_insert" );
d191 9
a199 5
	if ($success) { // Set $fld_list to the list of fields in table temp_header
		$fld_list = field_list( "temp_header", $db_conn );
		$success = ($fld_list != NULL);
		if (!$success) message_log_append( $msg_log, "field_list of temp_header failed", MSG_LOG_ERROR );
	}
d201 8
a208 5
	if ($success) { // Set $seqn to the current value of LAST_INSERT_ID()
		$seqn = last_insert_id( $db_conn );
if (DEBUG) message_log_append( $msg_log, "header_insert: seq1 = $seqn" );
		$success = (!is_null( $seqn ));
	}
d210 9
a218 8
	if ($success) { // insert into contract_header from temp_header
		$fld_list = '(' . $fld_list . ')';
		$qry = "INSERT INTO contract_header " . $fld_list .
			"SELECT * FROM temp_header";
if (DEBUG) message_log_append( $msg_log, "header: $qry" );
		if (!($success = mysql_query( $qry, $db_conn )))
			message_log_append( $msg_log, mysql_error( $db_conn ), MSG_LOG_ERROR );
	}
d220 9
a228 9
	if ($success) { // check to see if LAST_INSERT_ID() changed
		$new_seqn = last_insert_id( $db_conn );
		if ($new_seqn <> $seqn && !is_null( $new_seqn )) {
if (DEBUG) message_log_append( $msg_log, "header: success, new seq is $new_seqn" );
		} else { // insert failed
			message_log_append( $msg_log, "contract_header insert failed", MSG_LOG_ERROR );
			$success = FALSE;
		}
	}
d230 8
a237 1
// if success, return the new sequence number, else return NULL
d239 6
a244 1
	return( $success ? $new_seqn : NULL );
d246 10
a255 1
} // header_insert
d257 7
d265 5
a269 13
function detail_insert( $p_cindex, $db_conn )
// $p_cindex is the Contract sequence number that these detail
// lines need to reference.
// return TRUE if no errors, else FALSE
{
GLOBAL $msg_log;

if (DEBUG) message_log_append( $msg_log, "detail insert" );

	$success = TRUE;

        if ($success) { // Update table temp_detail to set Contract equal $p_cindex 
		$qry = "UPDATE temp_detail SET Contract = $p_cindex";
d271 3
a273 2
		if (!$success) message_log_append( $msg_log, mysql_error( $db_conn ), MSG_LOG_ERROR );
	}
d280 1
a280 1
	}
d283 7
a289 4
		$seqn = last_insert_id( $db_conn );
if (DEBUG) message_log_append( $msg_log, "detail: seqn = $seqn" );
		$success = (!is_null( $seqn ));
	}
d292 6
a297 5
		$fld_list = '(' . $fld_list . ')';
		$qry = "INSERT INTO contract_detail " . $fld_list .
			"SELECT * FROM temp_detail";
if (DEBUG) message_log_append( $msg_log, "detail: $qry" );
		if (!($success = mysql_query( $qry, $db_conn )))
d299 1
a299 1
	}
d302 7
a308 8
		$new_seqn = last_insert_id( $db_conn );
		if ($new_seqn <> $seqn && !is_null( $new_seqn )) {
if (DEBUG) message_log_append( $msg_log, "detail: success, new seq is $new_seqn" );
		} else { // insert failed
			message_log_append( $msg_log, "contract_detail insert failed", MSG_LOG_ERROR );
			$success = FALSE;
		}
	}
d312 1
a312 37
} // detail_insert


function insert_one( $p_campaign, $p_header, $p_detail_lines )
// one campaign, one contract's header, one contract's detail
// return TRUE if no errors, else FALSE
{
GLOBAL $msg_log;

	$success = TRUE;

// we have a campaign array, a header array, and a detail array.
// the detail array is two-dimensional, and the line item numbers
// begin at 0, e.g. $p_detail_lines[0]['Contract'].
// the header array's 'Site Record' field is an array of Site Record
// table rows.

// The header insert brings data into a temporary table.

// It returns the new sequence number on success or NULL on failure.

	if ($success) {
		$seq = header_insert( $db_conn, $p_header );
		$success = (!is_null( $seq ));
if (DEBUG) message_log_append( $msg_log, $success ? "Header Success" : "Header Failure" );
	}

if (DEBUG) message_log_append( $msg_log, "New Seq: $seq" );

// Pass the Seq value to the detail insert routine.

	if ($success) {
		$success = detail_insert( $seq, $db_conn, $p_detail );
if (DEBUG) message_log_append( $msg_log, $success ? "Detail Success" : "Detail Failure" );
	}

} // insert_one
d333 1
a333 1
echo "$qry<br>";
d342 1
a342 1
echo "$qry<br>";
d344 2
a345 1
		if (!$success) message_log_append( $msg_log, mysql_error( $db_conn ), MSG_LOG_ERROR );
d350 1
a350 1
echo "$qry<br>";
d352 2
a353 1
		if (!$success) message_log_append( $msg_log, mysql_error( $db_conn ), MSG_LOG_ERROR );
d358 1
a358 1
echo "$qry<br>";
d360 2
a361 1
		if (!$success) message_log_append( $msg_log, mysql_error( $db_conn ), MSG_LOG_ERROR );
d366 1
a366 1
echo "$qry<br>";
d368 2
a369 1
		if (!$success) message_log_append( $msg_log, mysql_error( $db_conn ), MSG_LOG_ERROR );
d376 1
d379 5
a383 2

	begin( $db_conn );	// start transaction
d389 1
d399 1
d408 1
d418 1
a420 1
			$p_cindex = $cust_seq;
d425 72
a496 4
//	if ($success)
//		commit( $db_conn );
//	else
		rollback( $db_conn );
@


1.3
log
@change LOG_ to MSG_LOG_
@
text
@d4 42
d52 1
d54 1
a54 1
if (DEBUG) message_log_append( "header_insert" );
d61 1
a61 1
		if (!$success) message_log_append( "field_list of temp_header failed", MSG_LOG_ERROR );
d66 1
a66 1
if (DEBUG) message_log_append( "header_insert: seq1 = $seqn" );
d74 1
a74 1
if (DEBUG) message_log_append( "header: $qry" );
d76 1
a76 1
			message_log_append( mysql_error( $db_conn ), MSG_LOG_ERROR );
d82 1
a82 1
if (DEBUG) message_log_append( "header: success, new seq is $new_seqn" );
d84 1
a84 1
			message_log_append( "contract_header insert failed", MSG_LOG_ERROR );
d101 1
d103 1
a103 1
if (DEBUG) message_log_append( "detail insert" );
d110 1
a110 1
		if (!$success) message_log_append( mysql_error( $db_conn ), MSG_LOG_ERROR );
d117 1
a117 1
			message_log_append( "field_list of temp_detail failed", MSG_LOG_ERROR );
d122 1
a122 1
if (DEBUG) message_log_append( "detail: seqn = $seqn" );
d130 1
a130 1
if (DEBUG) message_log_append( "detail: $qry" );
d132 1
a132 1
			message_log_append( mysql_error( $db_conn ), MSG_LOG_ERROR );
d138 1
a138 1
if (DEBUG) message_log_append( "detail: success, new seq is $new_seqn" );
d140 1
a140 1
			message_log_append( "contract_detail insert failed", MSG_LOG_ERROR );
d151 1
d154 4
a157 1
xxx
d164 1
a164 1
// If we need to create a new agency record, do that here.
a165 28
	if ($_SESSION[ "agency_not_found" ]) {
		$old_seq = last_insert_id( $db_conn ); // note this value
		$agent_name = $_SESSION[ "agency_name" ];
		$rate = DEFAULT_AGENCY_RATE;
		$qry = "INSERT INTO agencies (Name,Rate) VALUES ('$agent_name',$rate)";
		$success = mysql_query( $qry, $db_conn );
		if ($success) {
// get the agency sequence number, and update the temp_header file with it
			$agent_seq = last_insert_id( $db_conn );
			$success = ($agent_seq <> $old_seq);
			if (!$success) {
				message_log_append( "Error while creating Agency " . 
					"'$agent_name'", ERROR_LOG );
			}
		}
		if ($success) {
			$qry = "UPDATE temp_header SET AIndex = $agent_seq";
			$success = mysql_query( $qry, $db_conn );
		}
		if ($success) {
			message_log_append( "Agency created: " .
				"Seq = $agent_seq, Name = '$agent_name'", MSG_LOG_WARNING );
		}
		unset( $_SESSION[ "agency_not_found" ] );
		unset( $_SESSION[ "agency_name"      ] );
	}

// The header insert brings data into a temporary table.
d169 3
a171 3
		$cindex = header_insert( $db_conn );
		$success = (!is_null( $cindex ));
if (DEBUG) message_log_append( $success ? "Header Success" : "Header Failure" );
d174 1
a174 1
if (DEBUG) message_log_append( "CIndex: $cindex" );
d176 1
a176 1
// Pass the CIndex value to the detail insert routine.
d179 2
a180 2
		$success = detail_insert( $cindex, $db_conn );
if (DEBUG) message_log_append( $success ? "Detail Success" : "Detail Failure" );
d183 1
a183 2
xxx
}
d186 4
a189 1
function insert_sql_data( $db_conn )
d196 2
d204 1
d212 2
a213 1
		$qry = "CREATE TEMP TABLE temp_header LIKE contract_header";
d215 1
a215 1
		if (!$success) message_log_append( mysql_error( $db_conn ), MSG_LOG_ERROR );
d219 2
a220 1
		$qry = "CREATE TEMP TABLE temp_detail LIKE contract_detail";
d222 1
a222 1
		if (!$success) message_log_append( mysql_error( $db_conn ), MSG_LOG_ERROR );
d227 1
d229 1
a229 1
		if (!$success) message_log_append( mysql_error( $db_conn ), MSG_LOG_ERROR );
d234 1
d236 1
a236 1
		if (!$success) message_log_append( mysql_error( $db_conn ), MSG_LOG_ERROR );
d243 3
d247 2
a248 1
xxx
d252 2
a253 3
	if ($_SESSION[ "agency_not_found" ]) {
		$old_seq = last_insert_id( $db_conn ); // note this value
		$agent_name = $_SESSION[ "agency_name" ];
d255 5
a259 2
		$qry = "INSERT INTO agencies (Name,Rate) VALUES ('$agent_name',$rate)";
		$success = mysql_query( $qry, $db_conn );
d261 16
a276 12
// get the agency sequence number, and update the temp_header file with it
			$agent_seq = last_insert_id( $db_conn );
			$success = ($agent_seq <> $old_seq);
			if (!$success) {
				message_log_append( "Error while creating Agency " . 
					"'$agent_name'", ERROR_LOG );
			}
		}
		if ($success) {
			$qry = "UPDATE temp_header SET AIndex = $agent_seq";
			$success = mysql_query( $qry, $db_conn );
		}
d278 10
a287 29
			message_log_append( "Agency created: " .
				"Seq = $agent_seq, Name = '$agent_name'", MSG_LOG_WARNING );
		}
		unset( $_SESSION[ "agency_not_found" ] );
		unset( $_SESSION[ "agency_name"      ] );
	}

// The header insert brings data into a temporary table.
// It returns the new sequence number on success or NULL on failure.

	if ($success) {
		$cindex = header_insert( $db_conn );
		$success = (!is_null( $cindex ));
if (DEBUG) message_log_append( $success ? "Header Success" : "Header Failure" );
	}

if (DEBUG) message_log_append( "CIndex: $cindex" );

// Pass the CIndex value to the detail insert routine.

	if ($success) {
		$success = detail_insert( $cindex, $db_conn );
if (DEBUG) message_log_append( $success ? "Detail Success" : "Detail Failure" );
	}

xxx
	if ($success)
		commit( $db_conn );
	else
d307 1
a307 1
	insert_sql_data( $db_conn );
@


1.2
log
@early work at importing campaign/header/detail array data.
@
text
@d18 1
a18 1
		if (!$success) message_log_append( "field_list of temp_header failed", LOG_ERROR );
d33 1
a33 1
			message_log_append( mysql_error( $db_conn ), LOG_ERROR );
d41 1
a41 1
			message_log_append( "contract_header insert failed", LOG_ERROR );
d66 1
a66 1
		if (!$success) message_log_append( mysql_error( $db_conn ), LOG_ERROR );
d73 1
a73 1
			message_log_append( "field_list of temp_detail failed", LOG_ERROR );
d88 1
a88 1
			message_log_append( mysql_error( $db_conn ), LOG_ERROR );
d96 1
a96 1
			message_log_append( "contract_detail insert failed", LOG_ERROR );
d139 1
a139 1
				"Seq = $agent_seq, Name = '$agent_name'", LOG_WARNING );
d189 1
a189 1
		if (!$success) message_log_append( mysql_error( $db_conn ), LOG_ERROR );
d195 1
a195 1
		if (!$success) message_log_append( mysql_error( $db_conn ), LOG_ERROR );
d201 1
a201 1
		if (!$success) message_log_append( mysql_error( $db_conn ), LOG_ERROR );
d207 1
a207 1
		if (!$success) message_log_append( mysql_error( $db_conn ), LOG_ERROR );
d240 1
a240 1
				"Seq = $agent_seq, Name = '$agent_name'", LOG_WARNING );
@


1.1
log
@Initial revision
@
text
@d106 61
d186 12
d210 4
d215 1
d222 2
a223 1
		$qry = "INSERT INTO agencies (Name,Rate) VALUES ('$agent_name',15)";
d229 4
d264 1
d275 3
a277 3
function ncc_insert_sql( /* $header_file_name,
			 $detail_file_name,
			 $sql_output_filename */ )
d279 1
a279 1
// take the SQL data and organize a structured INSERT process
d281 2
a282 1
// of contract indexes and network names for the syscode.
d289 1
a289 1
} // ncc_insert_sql
@
